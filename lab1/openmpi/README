Structura directoriului

* available_hosts_file - fişier intern utilizat pentru rularea simulată a aplicaţiei openmpi pe un cluster virtual
* build_container.sh - comenzi bash de creare a imaginei unui container care are dependeţele instalate pentru compilarea unui program openmpi
* compile.sh - comenzi bash de compilare a codului din fisierul lab1_openmpi.cpp. Se execută în interiorul containerului openmpi
* docker-compose.yml - fişier docker-compose pentru similarea unui cluster
* Dockerfile - fişier docker care conţine comenzile pentru crearea unei imagini de container cu dependenţele necesare
* lab1_openmpi - fişier executabil rezultant în urma compilării codului din lab1_openmpi.cpp prin executarea fişierului compile.sh în interiorul containerului
* lab1_openmpi.cpp - implementarea unui ciot al algoritmului de rezolvare a cripto-puzzle-ului cu paralelizare automată realizată cu ajutorul librăriei openmpi
* run_computations_on_cluster.sh - fişier intern care porneşte aplicaţia openmpi compilată pe clusterul virtual
* sha256.cpp - implementarea algoritmului de hash SHA256
* sha256.h - fişierul de tip header corespunzător fişierului sha256.cpp
* start_cluster.sh - comenzi bash de pornire a clusterului virtual, compilare a aplicaţiei openmpi şi rularea ei pe clusterul virtual
* stop_cluster.sh - comenzi bash de oprire a clusterului virtual

Paşi de urmat
1) Deschideţi fereastra bash în directoriul curent
2) Executaţi în bash comanda ./build_container.sh. Aceasta va crea o imagine de container cu numele openmpi
3) Executaţi în bash comanda ./start_cluster.sh. Aceasta va instanţia clusterul virtual şi va rula aplicaţia openmpi
4) Ca rezultat a pasului precedent veţi primi un mesaj ”Hello World from processor *****, rank ? out of 5 processors”. Clusterul virtual curent conţine 5 noduri. Această setare poate fi modificată în fişierul ”start_cluster.sh” linia 2 prin modificarea ”--scale lab1_openmpi=?”, unde în loc de simbolul ? se va pune numărul de noduri virtuale dorite.
6) Pentru a reactualiza starea clusterului executaţi ”stop_cluster.sh” şi apoi ”start_cluster.sh” pentru a rula aplicaţia openmpi în interiorul clusterului cu setările noi.
7) Efectuaţi modificările necesare astfel ca să opţineţi o accelerare a rezolvării crypto-puzzle-ului în funţie de hardware-ul disponibil
